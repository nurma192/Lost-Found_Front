{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from 'react-query';\nexport const getUserData = async token => {\n  if (!token) {\n    return;\n  }\n  const response = await fetch(`${process.env.REACT_APP_API_URL}/api/profile`, {\n    headers: {\n      'Authorization': `Bearer ${token}`\n    }\n  });\n  if (!response.ok) {\n    throw new Error('Failed to fetch user data');\n  }\n  return response.json();\n};\nexport const useUserData = token => {\n  _s();\n  return useQuery('userData', () => getUserData(token), {\n    enabled: !!token\n  });\n};\n_s(useUserData, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"names":["useQuery","getUserData","token","response","fetch","process","env","REACT_APP_API_URL","headers","ok","Error","json","useUserData","_s","enabled"],"sources":["/Users/nurmakhanbetkenes/Desktop/projects clones/lost-and-found/src/api/usersApi.ts"],"sourcesContent":["import { useQuery } from 'react-query';\n\nexport const getUserData = async (token: string) => {\n    if (!token) {\n        return\n    }\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/api/profile`, {\n        headers: {\n            'Authorization': `Bearer ${token}`,\n        },\n    });\n\n    if (!response.ok) {\n        throw new Error('Failed to fetch user data');\n    }\n\n    return response.json();\n};\n\nexport const useUserData = (token: string) => {\n    return useQuery('userData', () => getUserData(token), {\n        enabled: !!token, \n    });\n};\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,aAAa;AAEtC,OAAO,MAAMC,WAAW,GAAG,MAAOC,KAAa,IAAK;EAChD,IAAI,CAACA,KAAK,EAAE;IACR;EACJ;EACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,cAAc,EAAE;IACzEC,OAAO,EAAE;MACL,eAAe,EAAE,UAAUN,KAAK;IACpC;EACJ,CAAC,CAAC;EAEF,IAAI,CAACC,QAAQ,CAACM,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EAChD;EAEA,OAAOP,QAAQ,CAACQ,IAAI,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIV,KAAa,IAAK;EAAAW,EAAA;EAC1C,OAAOb,QAAQ,CAAC,UAAU,EAAE,MAAMC,WAAW,CAACC,KAAK,CAAC,EAAE;IAClDY,OAAO,EAAE,CAAC,CAACZ;EACf,CAAC,CAAC;AACN,CAAC;AAACW,EAAA,CAJWD,WAAW;EAAA,QACbZ,QAAQ;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}