{"ast":null,"code":"var _jsxFileName = \"/Users/nurmakhanbetkenes/Desktop/projects clones/lost-and-found/src/components/ui/MyButton.tsx\";\nimport React from 'react';\nimport { Button } from \"@nextui-org/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyButton({\n  children,\n  color,\n  className,\n  type = \"button\",\n  onClick\n}) {\n  let colorClassName = \"\";\n  if (color === \"primary\") {\n    colorClassName = ` text-white bg-[#1560BD] hover:bg-[#0f488e]`;\n  } else if (color === \"transparent\") {\n    colorClassName = ` text-black bg-transparent border border-transparent hover:border-[#1560BD] hover:text-[#1560BD]`;\n  } else if (color === \"danger\") {\n    colorClassName = ` text-red-500 bg-transparent border border-transparent hover:border-red-500`;\n  }\n  return /*#__PURE__*/_jsxDEV(Button, {\n    className: `${className} rounded transition ${colorClassName}`,\n    type: type,\n    onClick: () => onClick && onClick(),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_c = MyButton;\nexport default MyButton;\nvar _c;\n$RefreshReg$(_c, \"MyButton\");","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","MyButton","children","color","className","type","onClick","colorClassName","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nurmakhanbetkenes/Desktop/projects clones/lost-and-found/src/components/ui/MyButton.tsx"],"sourcesContent":["import React from 'react';\nimport {Button} from \"@nextui-org/react\";\n\ninterface Props {\n    children: React.ReactNode;\n    color?: \"primary\" | \"transparent\" | \"danger\";\n    className?: string;\n    type?: \"button\" | \"submit\" | \"reset\";\n    onClick?: () => void;\n}\n\nfunction MyButton({children,color, className, type = \"button\", onClick}: Props) {\n    let colorClassName = \"\"\n    if (color === \"primary\") {\n        colorClassName = ` text-white bg-[#1560BD] hover:bg-[#0f488e]`\n    }else if (color === \"transparent\") {\n        colorClassName = ` text-black bg-transparent border border-transparent hover:border-[#1560BD] hover:text-[#1560BD]`\n    }else if (color === \"danger\") {\n        colorClassName = ` text-red-500 bg-transparent border border-transparent hover:border-red-500`\n    }\n    return (\n        <Button className={`${className} rounded transition ${colorClassName}`} type={type} onClick={() => onClick && onClick()}>\n            {children}\n        </Button>\n    );\n}\n\nexport default MyButton;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,QAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUzC,SAASC,QAAQA,CAAC;EAACC,QAAQ;EAACC,KAAK;EAAEC,SAAS;EAAEC,IAAI,GAAG,QAAQ;EAAEC;AAAc,CAAC,EAAE;EAC5E,IAAIC,cAAc,GAAG,EAAE;EACvB,IAAIJ,KAAK,KAAK,SAAS,EAAE;IACrBI,cAAc,GAAG,6CAA6C;EAClE,CAAC,MAAK,IAAIJ,KAAK,KAAK,aAAa,EAAE;IAC/BI,cAAc,GAAG,kGAAkG;EACvH,CAAC,MAAK,IAAIJ,KAAK,KAAK,QAAQ,EAAE;IAC1BI,cAAc,GAAG,6EAA6E;EAClG;EACA,oBACIP,OAAA,CAACF,MAAM;IAACM,SAAS,EAAE,GAAGA,SAAS,uBAAuBG,cAAc,EAAG;IAACF,IAAI,EAAEA,IAAK;IAACC,OAAO,EAAEA,CAAA,KAAMA,OAAO,IAAIA,OAAO,CAAC,CAAE;IAAAJ,QAAA,EACnHA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEjB;AAACC,EAAA,GAdQX,QAAQ;AAgBjB,eAAeA,QAAQ;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}