{"ast":null,"code":"var _jsxFileName = \"/Users/nurmakhanbetkenes/Desktop/projects clones/lost-and-found/src/components/ui/MyButton.tsx\";\nimport React from 'react';\nimport { Button } from \"@nextui-org/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyButton({\n  children,\n  color,\n  className,\n  type = \"button\"\n}) {\n  let colorClassName = \"\";\n  if (color === \"primary\") {\n    colorClassName = ` text-white bg-[#1560BD] hover:bg-[#0f488e]`;\n  } else if (color === \"transparent\") {\n    colorClassName = ` text-black bg-transparent border border-transparent hover:border-[#1560BD] hover:text-[#1560BD]`;\n  } else if (color === \"danger\") {\n    colorClassName = ` text-red-500 bg-transparent border border-transparent hover:border-red-500`;\n  }\n  console.log(\"color\", color);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    className: `${className} rounded transition ${colorClassName}`,\n    type: type,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n_c = MyButton;\nexport default MyButton;\nvar _c;\n$RefreshReg$(_c, \"MyButton\");","map":{"version":3,"names":["React","Button","jsxDEV","_jsxDEV","MyButton","children","color","className","type","colorClassName","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nurmakhanbetkenes/Desktop/projects clones/lost-and-found/src/components/ui/MyButton.tsx"],"sourcesContent":["import React from 'react';\nimport {Button} from \"@nextui-org/react\";\n\ninterface Props {\n    children: React.ReactNode;\n    color?: \"primary\" | \"transparent\" | \"danger\";\n    className?: string;\n    type?: \"button\" | \"submit\" | \"reset\";\n}\n\nfunction MyButton({children,color, className, type = \"button\"}: Props) {\n    let colorClassName = \"\"\n    if (color === \"primary\") {\n        colorClassName = ` text-white bg-[#1560BD] hover:bg-[#0f488e]`\n    }else if (color === \"transparent\") {\n        colorClassName = ` text-black bg-transparent border border-transparent hover:border-[#1560BD] hover:text-[#1560BD]`\n    }else if (color === \"danger\") {\n        colorClassName = ` text-red-500 bg-transparent border border-transparent hover:border-red-500`\n    }\n    console.log(\"color\", color)\n    return (\n        <Button className={`${className} rounded transition ${colorClassName}`} type={type}>\n            {children}\n        </Button>\n    );\n}\n\nexport default MyButton;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,MAAM,QAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASzC,SAASC,QAAQA,CAAC;EAACC,QAAQ;EAACC,KAAK;EAAEC,SAAS;EAAEC,IAAI,GAAG;AAAe,CAAC,EAAE;EACnE,IAAIC,cAAc,GAAG,EAAE;EACvB,IAAIH,KAAK,KAAK,SAAS,EAAE;IACrBG,cAAc,GAAG,6CAA6C;EAClE,CAAC,MAAK,IAAIH,KAAK,KAAK,aAAa,EAAE;IAC/BG,cAAc,GAAG,kGAAkG;EACvH,CAAC,MAAK,IAAIH,KAAK,KAAK,QAAQ,EAAE;IAC1BG,cAAc,GAAG,6EAA6E;EAClG;EACAC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEL,KAAK,CAAC;EAC3B,oBACIH,OAAA,CAACF,MAAM;IAACM,SAAS,EAAE,GAAGA,SAAS,uBAAuBE,cAAc,EAAG;IAACD,IAAI,EAAEA,IAAK;IAAAH,QAAA,EAC9EA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEjB;AAACC,EAAA,GAfQZ,QAAQ;AAiBjB,eAAeA,QAAQ;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}