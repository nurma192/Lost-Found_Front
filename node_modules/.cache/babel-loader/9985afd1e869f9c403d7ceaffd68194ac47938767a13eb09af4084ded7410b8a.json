{"ast":null,"code":"var _jsxFileName = \"/Users/nurmakhanbetkenes/Desktop/projects clones/lost-and-found/src/components/forms/RegisterForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport MyButton from \"../ui/MyButton\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RegisterForm() {\n  _s();\n  const navigate = useNavigate();\n  const [registerFormError, setRegisterFormError] = useState('');\n  const registerForm = useForm();\n  const onSubmitRegister = async data => {\n    console.log(data);\n    const res = await fetch(`${process.env.REACT_APP_API_URL}/api/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: data.email,\n        password: data.password,\n        code: data.code\n      })\n    });\n    const json = await res.json();\n    if (!res.ok) {\n      setRegisterFormError(json.message);\n    } else {\n      navigate('/login');\n    }\n    console.log(\"onSubmitRegister\", json);\n  };\n  const sendCode = async () => {\n    const isValid = await registerForm.trigger(\"email\");\n    if (!isValid) {\n      console.log(\"Invalid email. Please enter a valid email address.\");\n      return;\n    }\n    const email = registerForm.watch(\"email\");\n    try {\n      const res = await fetch(`${BaseURL}/api/sendcode`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const json = await res.json();\n      if (!res.ok) {\n        setRegisterFormError(json.message);\n      }\n      console.log(\"sendCode\", json);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const inputClass = \"w-full border rounded p-2\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registerForm.handleSubmit(onSubmitRegister),\n      className: \"flex flex-col gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email\",\n        type: \"text\",\n        className: inputClass,\n        ...registerForm.register(\"email\", {\n          required: \"Email is required\",\n          pattern: {\n            value: /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n            message: \"Invalid email address\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), registerForm.formState.errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500 text-sm\",\n        children: registerForm.formState.errors.email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Code\",\n          type: \"text\",\n          className: inputClass,\n          ...registerForm.register(\"code\", {\n            required: \"Code is required\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n          className: \"w-full h-full text-white py-3\",\n          color: \"primary\",\n          onClick: () => sendCode(),\n          children: \"Send code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), registerForm.formState.errors.code && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500 text-sm\",\n        children: registerForm.formState.errors.code.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password\",\n        type: \"password\",\n        className: `${inputClass} tracking-widest`,\n        ...registerForm.register(\"password\", {\n          required: \"Password is required\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Confirm Password\",\n        type: \"password\",\n        className: `${inputClass} tracking-widest`,\n        ...registerForm.register(\"passwordConfirm\", {\n          required: \"Password is required\",\n          validate: value => {\n            if (value !== registerForm.getValues(\"password\")) {\n              return \"Passwords do not match\";\n            }\n            return true;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), registerForm.formState.errors.passwordConfirm && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500 text-sm\",\n        children: registerForm.formState.errors.passwordConfirm.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 67\n      }, this), registerFormError && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500 text-sm\",\n        children: registerFormError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n        className: \"w-full mb-4 py-2\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(RegisterForm, \"CiPmb/sQLahdCMKZ98Bo1sD3D3U=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","useState","useForm","MyButton","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","RegisterForm","_s","navigate","registerFormError","setRegisterFormError","registerForm","onSubmitRegister","data","console","log","res","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","email","password","code","json","ok","message","sendCode","isValid","trigger","watch","BaseURL","e","inputClass","children","onSubmit","handleSubmit","className","placeholder","type","register","required","pattern","value","fileName","_jsxFileName","lineNumber","columnNumber","formState","errors","color","onClick","validate","getValues","passwordConfirm","_c","$RefreshReg$"],"sources":["/Users/nurmakhanbetkenes/Desktop/projects clones/lost-and-found/src/components/forms/RegisterForm.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport {SubmitHandler, useForm} from \"react-hook-form\";\nimport MyButton from \"../ui/MyButton\";\nimport {useLocation, useNavigate} from \"react-router-dom\";\n\ntype RegisterFormBody = {\n    email: string;\n    password: string;\n    passwordConfirm: string;\n    code: string\n}\n\nfunction RegisterForm() {\n    const navigate = useNavigate();\n    const [registerFormError, setRegisterFormError] = useState<string>('');\n\n    const registerForm = useForm<RegisterFormBody>()\n    const onSubmitRegister: SubmitHandler<RegisterFormBody> = async (data) => {\n        console.log(data);\n        const res = await fetch(`${process.env.REACT_APP_API_URL}/api/signup`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({email: data.email, password: data.password, code: data.code}),\n        })\n        const json = await res.json();\n        if (!res.ok) {\n            setRegisterFormError(json.message)\n        }else{\n            navigate('/login')\n        }\n        console.log(\"onSubmitRegister\",json)\n    }\n\n    const sendCode = async () => {\n        const isValid = await registerForm.trigger(\"email\");\n        if (!isValid) {\n            console.log(\"Invalid email. Please enter a valid email address.\");\n            return;\n        }\n        const email = registerForm.watch(\"email\")\n        try {\n            const res = await fetch(`${BaseURL}/api/sendcode`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({email})\n            })\n            const json = await res.json();\n            if (!res.ok) {\n                setRegisterFormError(json.message)\n            }\n            console.log(\"sendCode\", json)\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    const inputClass = \"w-full border rounded p-2\"\n\n    return (\n        <>\n            <form onSubmit={registerForm.handleSubmit(onSubmitRegister)} className=\"flex flex-col gap-2\">\n                <input\n                    placeholder=\"Email\"\n                    type=\"text\"\n                    className={inputClass}\n                    {...registerForm.register(\"email\", {\n                        required: \"Email is required\",\n                        pattern: {\n                            value: /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n                            message: \"Invalid email address\"\n                        }\n                    })}\n                />\n                {registerForm.formState.errors.email &&\n\t\t\t\t    <span className=\"text-red-500 text-sm\">{registerForm.formState.errors.email.message}</span>}\n                <div className=\"flex gap-2\">\n                    <input\n                        placeholder=\"Code\"\n                        type=\"text\"\n                        className={inputClass}\n                        {...registerForm.register(\"code\", {\n                            required: \"Code is required\"\n                        })}\n                    />\n                    <MyButton\n                        className=\"w-full h-full text-white py-3\"\n                        color=\"primary\"\n                        onClick={() => sendCode()}>\n                        Send code\n                    </MyButton>\n                </div>\n                {registerForm.formState.errors.code &&\n\t\t\t\t    <span className=\"text-red-500 text-sm\">{registerForm.formState.errors.code.message}</span>}\n                <input\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    className={`${inputClass} tracking-widest`}\n                    {...registerForm.register(\"password\", {\n                        required: \"Password is required\"\n                    })}\n                />\n                <input\n                    placeholder=\"Confirm Password\"\n                    type=\"password\"\n                    className={`${inputClass} tracking-widest`}\n                    {...registerForm.register(\"passwordConfirm\", {\n                        required: \"Password is required\",\n                        validate: (value) => {\n                            if (value !== registerForm.getValues(\"password\")) {\n                                return \"Passwords do not match\";\n                            }\n                            return true;\n                        }\n                    })}\n                />\n                {registerForm.formState.errors.passwordConfirm && <span\n\t\t\t\t    className=\"text-red-500 text-sm\">{registerForm.formState.errors.passwordConfirm.message}</span>}\n                {registerFormError && <span className=\"text-red-500 text-sm\">{registerFormError}</span>}\n\n                <MyButton\n                    className=\"w-full mb-4 py-2\"\n                    color=\"primary\"\n                    type=\"submit\">\n                    Register\n                </MyButton>\n            </form>\n        </>\n    );\n}\n\nexport default RegisterForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}