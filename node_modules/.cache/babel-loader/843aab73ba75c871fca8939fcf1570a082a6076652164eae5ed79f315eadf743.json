{"ast":null,"code":"var _jsxFileName = \"/Users/nurmakhanbetkenes/Desktop/projects clones/lost-and-found/src/components/forms/LoginForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport MyButton from \"../ui/MyButton\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction LoginForm() {\n  _s();\n  const BaseURL = \"http://192.168.1.117:8000\";\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const loginForm = useForm();\n  const onSubmitLogin = async data => {\n    console.log(data);\n    const res = await fetch(`${BaseURL}/api/signin`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: data.email,\n        password: data.password\n      })\n    });\n    const json = await res.json();\n    if (!res.ok) {\n      setError(json.message);\n    } else {\n      localStorage.setItem(\"token\", json.token);\n      navigate('/');\n    }\n    console.log(\"onSubmitLogin:\", json);\n  };\n  const inputClass = \"w-full border rounded p-2\";\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: loginForm.handleSubmit(onSubmitLogin),\n      className: \"flex flex-col gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email\",\n        type: \"text\",\n        className: inputClass,\n        ...loginForm.register(\"email\", {\n          required: \"Email is required\",\n          pattern: {\n            value: /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n            message: \"Invalid email address\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), loginForm.formState.errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500 text-sm\",\n        children: loginForm.formState.errors.email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password\",\n        type: \"password\",\n        className: `${inputClass} tracking-widest`,\n        ...loginForm.register(\"password\", {\n          required: \"Password is required\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), loginForm.formState.errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500 text-sm\",\n        children: loginForm.formState.errors.password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 6\n      }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-red-500 text-sm\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n        className: \"w-full mb-4 text-white bg-red-500\",\n        color: \"primary\",\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(LoginForm, \"xY0r3WjKxGEJoS49vgpmVIPl3DQ=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useForm","MyButton","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","BaseURL","navigate","error","setError","loginForm","onSubmitLogin","data","console","log","res","fetch","method","headers","body","JSON","stringify","email","password","json","ok","message","localStorage","setItem","token","inputClass","children","onSubmit","handleSubmit","className","placeholder","type","register","required","pattern","value","fileName","_jsxFileName","lineNumber","columnNumber","formState","errors","color","_c","$RefreshReg$"],"sources":["/Users/nurmakhanbetkenes/Desktop/projects clones/lost-and-found/src/components/forms/LoginForm.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport {SubmitHandler, useForm} from \"react-hook-form\";\nimport MyButton from \"../ui/MyButton\";\nimport {useNavigate} from \"react-router-dom\";\n\ntype LoginFormBody = {\n    email: string;\n    password: string;\n}\n\nfunction LoginForm() {\n    const BaseURL = \"http://192.168.1.117:8000\"\n    const navigate = useNavigate();\n    const [error, setError] = useState<string>('');\n    const loginForm = useForm<LoginFormBody>()\n    const onSubmitLogin: SubmitHandler<LoginFormBody> = async (data) => {\n        console.log(data);\n        const res = await fetch(`${BaseURL}/api/signin`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({email: data.email, password: data.password}),\n        })\n        const json = await res.json();\n        if (!res.ok) {\n            setError(json.message);\n        }else{\n            localStorage.setItem(\"token\", json.token)\n            navigate('/')\n        }\n        console.log(\"onSubmitLogin:\", json)\n    }\n\n    const inputClass = \"w-full border rounded p-2\"\n    return (\n        <>\n            <form onSubmit={loginForm.handleSubmit(onSubmitLogin)} className=\"flex flex-col gap-2\">\n                <input\n                    placeholder=\"Email\"\n                    type=\"text\"\n                    className={inputClass}\n                    {...loginForm.register(\"email\", {\n                        required: \"Email is required\",\n                        pattern: {\n                            value: /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n                            message: \"Invalid email address\"\n                        }\n                    })}\n                />\n                {loginForm.formState.errors.email &&\n\t\t\t\t\t<span className=\"text-red-500 text-sm\">{loginForm.formState.errors.email.message}</span>}\n                <input\n                    placeholder=\"Password\"\n                    type=\"password\"\n                    className={`${inputClass} tracking-widest`}\n                    {...loginForm.register(\"password\", {\n                        required: \"Password is required\"\n                    })}\n                />\n                {loginForm.formState.errors.password &&\n\t\t\t\t\t<span className=\"text-red-500 text-sm\">{loginForm.formState.errors.password.message}</span>}\n                {error && <span className=\"text-red-500 text-sm\">{error}</span>}\n                <MyButton\n                    className=\"w-full mb-4 text-white bg-red-500\"\n                    color=\"primary\"\n                    type=\"submit\">\n                    Login\n                </MyButton>\n            </form>\n        </>\n    );\n}\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}